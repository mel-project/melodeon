require "aux.melo"

def foo<$n>() = succ(0)
def succ<$n>(x: {$n..$n}) = $n + 1
def peel<$n>(x: {$n+1..$n+1}) = $n

def range<$n>(x: {$n..$n}) =
    let accum = unsafe transmute [] into [Nat; $n] in
    let ctr = 0 as Nat in
    loop $n do
        set! accum = unsafe transmute accum ++ [ctr] into [Nat; $n]; 
        set! ctr = ctr + 1
    done with accum

--- 

#[i for i in range(10)] == for i in range(10) collect i
for i in range(10) fold accum = 0 with
    accum + i